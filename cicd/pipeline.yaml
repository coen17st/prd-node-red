---
kind: pipeline
type: kubernetes
name: validate

steps:
  - name: yamllint
    image: sdesbure/yamllint:latest
    commands:
      - yamllint -c ./cicd/.yamllint .

---
kind: pipeline
type: kubernetes
name: build

depends_on:
  - validate

steps:
  - name: build-push
    image: quay.io/buildah/stable
    privileged: true
    environment:
      REGISTRY_HOST: "container-image-registry.devops.svc:5000"
      CONTAINERFILE: "./deploy/container/main/Containerfile"
      STORAGE_DRIVER: "overlay"
      FORMAT: "oci"
      CONTEXT: "."
      TLSVERIFY: "false"
      USERNAME:
        from_secret: container_image_registry_username
      PASSWORD:
        from_secret: container_image_registry_password
    commands:
      - |
        echo "Build image..."
        buildah --storage-driver=$${STORAGE_DRIVER} bud --format=$${FORMAT} --tls-verify=$${TLSVERIFY} --no-cache \
        -f $${CONTAINERFILE} \
        -t $${REGISTRY_HOST}/$${DRONE_REPO_NAME}:latest \
        -t $${REGISTRY_HOST}/$${DRONE_REPO_NAME}:$${DRONE_BUILD_NUMBER} \
        --layers=true $${CONTEXT}
      - |
        echo "Push image with latest tag..."
        buildah push --creds=$${USERNAME}:$${PASSWORD} --tls-verify=$${TLSVERIFY} \
        $${REGISTRY_HOST}/$${DRONE_REPO_NAME}:latest \
        docker://$${REGISTRY_HOST}/$${DRONE_REPO_NAME}:latest
      - |
        echo "Push image with buildnumber tag..."
        buildah push --creds=$${USERNAME}:$${PASSWORD} --tls-verify=$${TLSVERIFY} --digestfile=/tmp/image-digest \
        $${REGISTRY_HOST}/$${DRONE_REPO_NAME}:$${DRONE_BUILD_NUMBER} \
        docker://$${REGISTRY_HOST}/$${DRONE_REPO_NAME}:$${DRONE_BUILD_NUMBER}

  - name: set-tag
    image: alpine:latest
    environment:
      PUBLIC_REGISTRY_FQDN: ""
      YQ_VERSION: "v4.27.5"
    commands:
      - |
        wget https://github.com/mikefarah/yq/releases/download/$${YQ_VERSION}/yq_linux_amd64 -O /usr/bin/yq \
        && chmod +x /usr/bin/yq
      - |
        application="$${DRONE_REPO_NAME}" image="$${REGISTRY_HOST}/$${DRONE_REPO_NAME}:$${DRONE_BUILD_NUMBER}" \
        yq -i '(.spec | select(.template.spec.containers[]).template.spec.containers[] | select(.name == strenv(application)).image) |= strenv(image)' ./deploy/k8s/manifest.yaml
      - cat ./deploy/k8s/manifest.yaml

---
kind: secret
name: container_image_registry_username
get:
  path: container-image-registry-auth
  name: username

---
kind: secret
name: container_image_registry_password
get:
  path: container-image-registry-auth
  name: password
