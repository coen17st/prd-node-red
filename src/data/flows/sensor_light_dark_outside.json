[
    {
        "id": "4dd07a1d.6e53e4",
        "type": "tab",
        "label": "sensor_light_dark_outside",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cf9f14c80d528160",
        "type": "group",
        "z": "4dd07a1d.6e53e4",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "04c29ec7a7bb3e19",
            "351e6909c12b36ab",
            "6031ed8d02da2add",
            "f0e25a858eae0278"
        ],
        "x": 14,
        "y": 39,
        "w": 502,
        "h": 82
    },
    {
        "id": "a378d97aa6be5e49",
        "type": "junction",
        "z": "4dd07a1d.6e53e4",
        "x": 400,
        "y": 180,
        "wires": [
            [
                "818ba5a9.204658"
            ]
        ]
    },
    {
        "id": "3392d6cf5e1cb20b",
        "type": "junction",
        "z": "4dd07a1d.6e53e4",
        "x": 400,
        "y": 140,
        "wires": [
            [
                "5c56266b.e63438"
            ]
        ]
    },
    {
        "id": "49bcf8fe.de1de8",
        "type": "server-state-changed",
        "z": "4dd07a1d.6e53e4",
        "name": "illuminance weather station",
        "server": "4ba92433.2478cc",
        "version": 6,
        "outputs": 1,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sensor.weather_station_illuminance"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": true,
        "stateType": "num",
        "ifState": "",
        "ifStateType": "num",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 130,
        "y": 160,
        "wires": [
            [
                "9970a078522f1484"
            ]
        ]
    },
    {
        "id": "5c56266b.e63438",
        "type": "change",
        "z": "4dd07a1d.6e53e4",
        "name": "dark",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "dark",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 140,
        "wires": [
            [
                "714f8f70.75ec6"
            ]
        ]
    },
    {
        "id": "818ba5a9.204658",
        "type": "change",
        "z": "4dd07a1d.6e53e4",
        "name": "light",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "light",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 180,
        "wires": [
            [
                "714f8f70.75ec6"
            ]
        ]
    },
    {
        "id": "714f8f70.75ec6",
        "type": "rbe",
        "z": "4dd07a1d.6e53e4",
        "name": "",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1390,
        "y": 140,
        "wires": [
            [
                "607a179b.d377f8"
            ]
        ]
    },
    {
        "id": "607a179b.d377f8",
        "type": "stoptimer",
        "z": "4dd07a1d.6e53e4",
        "duration": "2",
        "units": "Minute",
        "payloadtype": "str",
        "payloadval": "reset",
        "name": "",
        "x": 1540,
        "y": 140,
        "wires": [
            [
                "7d19b3aa717186ea"
            ],
            []
        ]
    },
    {
        "id": "e1f379a0.db9e58",
        "type": "comment",
        "z": "4dd07a1d.6e53e4",
        "name": "Flow that use weather station illuminance sensor to determine if it is light or dark outside",
        "info": "",
        "x": 320,
        "y": 20,
        "wires": []
    },
    {
        "id": "7d19b3aa717186ea",
        "type": "ha-sensor",
        "z": "4dd07a1d.6e53e4",
        "name": "state outdoor light dark",
        "entityConfig": "5051592a.7844e8",
        "version": 0,
        "state": "payload",
        "stateType": "msg",
        "attributes": [],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 1740,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "9970a078522f1484",
        "type": "switch",
        "z": "4dd07a1d.6e53e4",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lte",
                "v": "2.5",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "4.5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "3392d6cf5e1cb20b"
            ],
            [
                "a378d97aa6be5e49"
            ]
        ]
    },
    {
        "id": "04c29ec7a7bb3e19",
        "type": "catch",
        "z": "4dd07a1d.6e53e4",
        "g": "cf9f14c80d528160",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 100,
        "y": 80,
        "wires": [
            [
                "351e6909c12b36ab"
            ]
        ]
    },
    {
        "id": "351e6909c12b36ab",
        "type": "template",
        "z": "4dd07a1d.6e53e4",
        "g": "cf9f14c80d528160",
        "name": "messsage",
        "field": "notify.message",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "message: {{{error.message}}} \\nSource: id: {{error.source.id}} \\ntype: {{error.source.type}} \\nname: {{error.source.name}} \\ncount: {{error.source.count}}",
        "output": "str",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "f0e25a858eae0278"
            ]
        ]
    },
    {
        "id": "6031ed8d02da2add",
        "type": "link out",
        "z": "4dd07a1d.6e53e4",
        "g": "cf9f14c80d528160",
        "name": "link_out_notify_1",
        "mode": "link",
        "links": [
            "a97f87cfab413716"
        ],
        "x": 475,
        "y": 80,
        "wires": []
    },
    {
        "id": "f0e25a858eae0278",
        "type": "template",
        "z": "4dd07a1d.6e53e4",
        "g": "cf9f14c80d528160",
        "name": "title",
        "field": "notify.title",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Node-RED",
        "output": "str",
        "x": 390,
        "y": 80,
        "wires": [
            [
                "6031ed8d02da2add"
            ]
        ]
    },
    {
        "id": "17f88310915585a7",
        "type": "api-current-state",
        "z": "4dd07a1d.6e53e4",
        "name": "weather station illuminance",
        "server": "4ba92433.2478cc",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "sensor.weather_station_illuminance",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 280,
        "wires": [
            [
                "b5382c6f0181713a"
            ]
        ]
    },
    {
        "id": "6c14527497f34f34",
        "type": "server-state-changed",
        "z": "4dd07a1d.6e53e4",
        "name": "sun",
        "server": "4ba92433.2478cc",
        "version": 6,
        "outputs": 1,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "sun.sun"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": true,
        "stateType": "str",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "sun",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "sunData",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            }
        ],
        "x": 70,
        "y": 280,
        "wires": [
            [
                "17f88310915585a7"
            ]
        ]
    },
    {
        "id": "extract-timestamp",
        "type": "function",
        "z": "4dd07a1d.6e53e4",
        "name": "convert dusk time to epoch",
        "func": "// Your timestamp\nlet timestamp = msg.sunData.new_state.attributes.next_dusk;\n\n// Convert to a JavaScript Date object\nlet date = new Date(timestamp);\n\n// Get the epoch time in milliseconds\nlet epochTime = date.getTime();\n\n// Convert to seconds (optional)\nlet epochTimeInSeconds = Math.floor(epochTime / 1000);\n\n// Output the epoch time\nmsg.dusk_time = epochTimeInSeconds;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 900,
        "y": 340,
        "wires": [
            [
                "eac48a5b9f81b614"
            ]
        ]
    },
    {
        "id": "delay-node",
        "type": "delay",
        "z": "4dd07a1d.6e53e4",
        "name": "delay until target time",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1200,
        "y": 460,
        "wires": [
            [
                "5c56266b.e63438"
            ]
        ]
    },
    {
        "id": "eac48a5b9f81b614",
        "type": "function",
        "z": "4dd07a1d.6e53e4",
        "name": "current time in epoch",
        "func": "// Get the current time as a Date object\nlet now = new Date();\n\n// Get the current epoch time in milliseconds\nlet epochTime = now.getTime();\n\n// Convert to seconds (optional)\nlet epochTimeInSeconds = Math.floor(epochTime / 1000);\n\n// Output the epoch time\nmsg.current_time = epochTimeInSeconds;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 880,
        "y": 400,
        "wires": [
            [
                "4526454deceed49b"
            ]
        ]
    },
    {
        "id": "4526454deceed49b",
        "type": "function",
        "z": "4dd07a1d.6e53e4",
        "name": "dusk time minus current time for delay",
        "func": "let delay_seconds = msg.dusk_time - msg.current_time\nmsg.delay = delay_seconds * 1000 //Miliseconds\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 460,
        "wires": [
            [
                "delay-node"
            ]
        ]
    },
    {
        "id": "d995b37fc6ae461d",
        "type": "switch",
        "z": "4dd07a1d.6e53e4",
        "name": "above_horizon / below_horizon",
        "property": "sun",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "above_horizon",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "below_horizon",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 770,
        "y": 280,
        "wires": [
            [
                "818ba5a9.204658"
            ],
            [
                "extract-timestamp"
            ]
        ]
    },
    {
        "id": "b5382c6f0181713a",
        "type": "switch",
        "z": "4dd07a1d.6e53e4",
        "name": "unknown / unavailable",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "unknown",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "unavailable",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 500,
        "y": 280,
        "wires": [
            [
                "d995b37fc6ae461d"
            ],
            [
                "d995b37fc6ae461d"
            ]
        ]
    },
    {
        "id": "e39c63aed1fd0e02",
        "type": "comment",
        "z": "4dd07a1d.6e53e4",
        "name": "use sun as fallback",
        "info": "",
        "x": 110,
        "y": 240,
        "wires": []
    },
    {
        "id": "4ba92433.2478cc",
        "type": "server",
        "name": "Home Assistant",
        "version": 5,
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true,
        "heartbeat": true,
        "heartbeatInterval": "30",
        "areaSelector": "id",
        "deviceSelector": "id",
        "entitySelector": "id",
        "statusSeparator": "at: ",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "h23",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": true
    },
    {
        "id": "5051592a.7844e8",
        "type": "ha-entity-config",
        "server": "4ba92433.2478cc",
        "deviceConfig": "",
        "name": "outdoor_light_dark",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "outdoor_light_dark"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": true,
        "debugEnabled": false
    }
]